{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EntradaService {\n  getNumProcessos() {\n    const urlEndpoint = this.url + 'get-processos';\n    let quantidade = this.http.get(urlEndpoint).toPromise();\n    return quantidade;\n  }\n  getNumMunicipios() {\n    const urlEndpoint = this.url + 'get-numero-municipios';\n    let quantidade = this.http.get(urlEndpoint).toPromise();\n    return quantidade;\n  }\n  getNumResponsaveis() {\n    const urlEndpoint = this.url + 'get-numero-gestores';\n    let quantidade = this.http.get(urlEndpoint).toPromise();\n    return quantidade;\n  }\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:8080/api/v1/app/';\n  }\n}\nEntradaService.ɵfac = function EntradaService_Factory(t) {\n  return new (t || EntradaService)(i0.ɵɵinject(i1.HttpClient));\n};\nEntradaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EntradaService,\n  factory: EntradaService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["EntradaService","getNumProcessos","urlEndpoint","url","quantidade","http","get","toPromise","getNumMunicipios","getNumResponsaveis","constructor","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\simplifica gpt\\Gripster\\Frontend\\angular-gripster\\src\\app\\entrada\\entrada.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntradaService {\r\n\r\n  url = 'http://localhost:8080/api/v1/app/';\r\n\r\n  getNumProcessos(): Number | PromiseLike<Number> {\r\n    const urlEndpoint = this.url +'get-processos';\r\n    let quantidade = this.http.get<Number>(urlEndpoint).toPromise()\r\n    return quantidade;\r\n  }\r\n  getNumMunicipios(): Number | PromiseLike<Number> {\r\n    const urlEndpoint = this.url +'get-numero-municipios';\r\n    let quantidade = this.http.get<Number>(urlEndpoint).toPromise()\r\n    return quantidade;\r\n  }\r\n  getNumResponsaveis(): Number | PromiseLike<Number> {\r\n    const urlEndpoint = this.url +'get-numero-gestores';\r\n    let quantidade = this.http.get<Number>(urlEndpoint).toPromise()\r\n    return quantidade;\r\n  }\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n\r\n}\r\n"],"mappings":";;AAMA,OAAM,MAAOA,cAAc;EAIzBC,eAAeA,CAAA;IACb,MAAMC,WAAW,GAAG,IAAI,CAACC,GAAG,GAAE,eAAe;IAC7C,IAAIC,UAAU,GAAG,IAAI,CAACC,IAAI,CAACC,GAAG,CAASJ,WAAW,CAAC,CAACK,SAAS,EAAE;IAC/D,OAAOH,UAAU;EACnB;EACAI,gBAAgBA,CAAA;IACd,MAAMN,WAAW,GAAG,IAAI,CAACC,GAAG,GAAE,uBAAuB;IACrD,IAAIC,UAAU,GAAG,IAAI,CAACC,IAAI,CAACC,GAAG,CAASJ,WAAW,CAAC,CAACK,SAAS,EAAE;IAC/D,OAAOH,UAAU;EACnB;EACAK,kBAAkBA,CAAA;IAChB,MAAMP,WAAW,GAAG,IAAI,CAACC,GAAG,GAAE,qBAAqB;IACnD,IAAIC,UAAU,GAAG,IAAI,CAACC,IAAI,CAACC,GAAG,CAASJ,WAAW,CAAC,CAACK,SAAS,EAAE;IAC/D,OAAOH,UAAU;EACnB;EAEAM,YAAoBL,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAlBxB,KAAAF,GAAG,GAAG,mCAAmC;EAkBF;;AApB5BH,cAAc,C;mBAAdA,cAAc,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdd,cAAc,C;SAAdA,cAAc;EAAAe,OAAA,EAAdf,cAAc,CAAAgB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
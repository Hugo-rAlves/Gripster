{"ast":null,"code":"import _asyncToGenerator from \"D:/simplifica gpt/Gripster/Frontend/angular-gripster/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProcessosApresentacaoService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:8080/api/v1/app/';\n  }\n  getApresentacoesProcessosGestor(gestor) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const urlEndpoint = _this.url + 'get-processos-gestor' + '/' + gestor;\n      let apresentacoes = _this.http.get(urlEndpoint).toPromise();\n      return apresentacoes;\n    })();\n  }\n  getApresentacoesProcessosMunicipio(municipio) {\n    const urlEndpoint = this.url + 'get-processos-municipio' + '/' + municipio;\n    let apresentacoes = this.http.get(urlEndpoint).toPromise();\n    return apresentacoes;\n  }\n}\nProcessosApresentacaoService.ɵfac = function ProcessosApresentacaoService_Factory(t) {\n  return new (t || ProcessosApresentacaoService)(i0.ɵɵinject(i1.HttpClient));\n};\nProcessosApresentacaoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProcessosApresentacaoService,\n  factory: ProcessosApresentacaoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ProcessosApresentacaoService","constructor","http","url","getApresentacoesProcessosGestor","gestor","_this","_asyncToGenerator","urlEndpoint","apresentacoes","get","toPromise","getApresentacoesProcessosMunicipio","municipio","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\simplifica gpt\\Gripster\\Frontend\\angular-gripster\\src\\app\\processos\\processos-apresentacao.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport ApresentaProcesso from '../shared/model/apresentacao-processo-model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessosApresentacaoService {\n \n\n  url = 'http://localhost:8080/api/v1/app/';\n\n  constructor(private http: HttpClient){\n\n  }\n  async getApresentacoesProcessosGestor(gestor: String): Promise<ApresentaProcesso[]> {\n    const urlEndpoint = this.url +'get-processos-gestor' + '/' + gestor;\n    let apresentacoes = this.http.get<ApresentaProcesso[]>(urlEndpoint).toPromise()\n    return apresentacoes;\n  }\n  getApresentacoesProcessosMunicipio(municipio: String): Promise<ApresentaProcesso[]> {\n    const urlEndpoint = this.url +'get-processos-municipio' + '/' + municipio;\n    let apresentacoes = this.http.get<ApresentaProcesso[]>(urlEndpoint).toPromise()\n    return apresentacoes;\n  }\n\n\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,4BAA4B;EAKvCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,GAAG,GAAG,mCAAmC;EAIzC;EACMC,+BAA+BA,CAACC,MAAc;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAClD,MAAMC,WAAW,GAAGF,KAAI,CAACH,GAAG,GAAE,sBAAsB,GAAG,GAAG,GAAGE,MAAM;MACnE,IAAII,aAAa,GAAGH,KAAI,CAACJ,IAAI,CAACQ,GAAG,CAAsBF,WAAW,CAAC,CAACG,SAAS,EAAE;MAC/E,OAAOF,aAAa;IAAC;EACvB;EACAG,kCAAkCA,CAACC,SAAiB;IAClD,MAAML,WAAW,GAAG,IAAI,CAACL,GAAG,GAAE,yBAAyB,GAAG,GAAG,GAAGU,SAAS;IACzE,IAAIJ,aAAa,GAAG,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAsBF,WAAW,CAAC,CAACG,SAAS,EAAE;IAC/E,OAAOF,aAAa;EACtB;;AAjBWT,4BAA4B,C;mBAA5BA,4BAA4B,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAA5BjB,4BAA4B,C;SAA5BA,4BAA4B;EAAAkB,OAAA,EAA5BlB,4BAA4B,CAAAmB,IAAA;EAAAC,UAAA,EAF3B;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
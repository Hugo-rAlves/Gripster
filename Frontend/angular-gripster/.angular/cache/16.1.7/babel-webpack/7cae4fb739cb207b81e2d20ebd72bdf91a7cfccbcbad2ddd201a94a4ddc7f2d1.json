{"ast":null,"code":"import _asyncToGenerator from \"D:/simplifica gpt/Gripster/Frontend/angular-gripster/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../processos-apresentacao.service\";\nimport * as i2 from \"@angular/common\";\nfunction ApresentacaoProcessoComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 3)(2, \"div\", 8)(3, \"b\")(4, \"h5\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"label\", 9);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵelementStart(9, \"h5\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 10)(12, \"h2\", 5);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"a\", 11);\n    i0.ɵɵtext(15, \"Ver processo\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 12);\n    i0.ɵɵtext(17, \" Data da decis\\u00E3o: \");\n    i0.ɵɵelementStart(18, \"strong\")(19, \"span\", 13);\n    i0.ɵɵtext(20, \"01/01/2022\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const processo_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(processo_r1.orgaoReferenteDecisao);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Ano: \", processo_r1.anoEmJulgamento, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(processo_r1.cidade);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(processo_r1.resultadoDecisao);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"href\", \"/processo/\" + processo_r1.idDecisao, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class ApresentacaoProcessoComponent {\n  constructor(service) {\n    this.service = service;\n    this.apresentacoes = [];\n  }\n  ngOnInit() {\n    this.fetchApresentacaoProcessos(this.gestor);\n  }\n  fetchApresentacaoProcessos(gestor) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.municipio === '' && gestor) {}\n      _this.apresentacoes = yield _this.service.getApresentacoesProcessosGestor(gestor);\n      console.log(_this.apresentacoes);\n    })();\n  }\n}\nApresentacaoProcessoComponent.ɵfac = function ApresentacaoProcessoComponent_Factory(t) {\n  return new (t || ApresentacaoProcessoComponent)(i0.ɵɵdirectiveInject(i1.ProcessosApresentacaoService));\n};\nApresentacaoProcessoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ApresentacaoProcessoComponent,\n  selectors: [[\"app-apresentacao-processo\"]],\n  inputs: {\n    gestor: \"gestor\",\n    municipio: \"municipio\"\n  },\n  decls: 9,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-body\"], [1, \"no-margins\"], [\"class\", \"col-md-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-6\"], [1, \"card-header\"], [1, \"pull-right\", \"font-bold\", \"text-success\"], [1, \"card-body\", 2, \"padding-top\", \"0px\"], [1, \"btn\", \"btn-block\", \"btn-outline\", \"btn-primary\", 2, \"margin-top\", \"10px\", 3, \"href\"], [1, \"ibox-footer\"], [0, \"th\", \"text\", \"${#temporals.format(processo.getDataJulgamento(),'dd/MM/yyyy')}\", 1, \"text-success\"]],\n  template: function ApresentacaoProcessoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\", 5);\n      i0.ɵɵtext(6, \"Nome\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(7, \"div\", 1);\n      i0.ɵɵtemplate(8, ApresentacaoProcessoComponent_div_8_Template, 21, 5, \"div\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.apresentacoes);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","processo_r1","orgaoReferenteDecisao","ɵɵtextInterpolate1","anoEmJulgamento","cidade","resultadoDecisao","ɵɵproperty","idDecisao","ɵɵsanitizeUrl","ApresentacaoProcessoComponent","constructor","service","apresentacoes","ngOnInit","fetchApresentacaoProcessos","gestor","_this","_asyncToGenerator","municipio","getApresentacoesProcessosGestor","console","log","ɵɵdirectiveInject","i1","ProcessosApresentacaoService","selectors","inputs","decls","vars","consts","template","ApresentacaoProcessoComponent_Template","rf","ctx","ɵɵtemplate","ApresentacaoProcessoComponent_div_8_Template"],"sources":["D:\\simplifica gpt\\Gripster\\Frontend\\angular-gripster\\src\\app\\processos\\apresentacao-processo\\apresentacao-processo.component.ts","D:\\simplifica gpt\\Gripster\\Frontend\\angular-gripster\\src\\app\\processos\\apresentacao-processo\\apresentacao-processo.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { ProcessosApresentacaoService } from '../processos-apresentacao.service';\nimport ApresentaProcesso from 'src/app/shared/model/apresentacao-processo-model';\n\n@Component({\n  selector: 'app-apresentacao-processo',\n  templateUrl: './apresentacao-processo.component.html',\n  styleUrls: ['./apresentacao-processo.component.css']\n})\nexport class ApresentacaoProcessoComponent {\n\n  @Input()\n  gestor:String;\n  @Input()\n  municipio:String;\n\n  apresentacoes: ApresentaProcesso[] = []\n  \n\n  constructor (private service: ProcessosApresentacaoService) {\n\n  }\n\n  ngOnInit() {\n      this.fetchApresentacaoProcessos(this.gestor)\n  }\n\n  async fetchApresentacaoProcessos(gestor: String) {\n    if(this.municipio === '' && gestor ){\n\n    }\n    this.apresentacoes = await this.service.getApresentacoesProcessosGestor(gestor);\n    console.log(this.apresentacoes);\n  }\n}\n","\n<div class=\"container\">\n    <!-- As \"linhas\" de coisas na tela são divididas em linhas -->\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h1 class=\"no-margins\">Nome</h1>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- As \"linhas\" de coisas na tela são divididas em linhas -->\n    <div class=\"row\">\n        <!-- dentro das linhas se coloca quadros com tamanho de colunas que devem somar tamanho 12 -->\n        <div class=\"col-md-6\" *ngFor=\"let processo of apresentacoes\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <b><h5>{{processo.orgaoReferenteDecisao}}</h5></b>\n                    <label class=\"pull-right font-bold text-success\">Ano: {{processo.anoEmJulgamento}}</label>\n                    <br>\n                    <h5>{{processo.cidade}}</h5>\n                </div>\n                <div class=\"card-body\" style=\"padding-top: 0px;\">\n                    <h2 class=\"no-margins\">{{processo.resultadoDecisao}}</h2>\n                    <a [href]=\"'/processo/'+processo.idDecisao\" class=\"btn btn-block btn-outline btn-primary\" style=\"margin-top: 10px;\">Ver processo</a>\n                </div>\n                <div class=\"ibox-footer\">\n                    Data da decisão:\n                    <strong>\n                        <span class=\"text-success\" th:text=\"${#temporals.format(processo.getDataJulgamento(),'dd/MM/yyyy')}\">01/01/2022</span>\n                    </strong>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- fecha o container e o content -->\n</div>\n"],"mappings":";;;;;;ICeQA,EAAA,CAAAC,cAAA,aAA6D;IAG1CD,EAAA,CAAAE,MAAA,GAAkC;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC9CH,EAAA,CAAAC,cAAA,eAAiD;IAAAD,EAAA,CAAAE,MAAA,GAAiC;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAC1FH,EAAA,CAAAI,SAAA,SAAI;IACJJ,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,IAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAEhCH,EAAA,CAAAC,cAAA,eAAiD;IACtBD,EAAA,CAAAE,MAAA,IAA6B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACzDH,EAAA,CAAAC,cAAA,aAAoH;IAAAD,EAAA,CAAAE,MAAA,oBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAExIH,EAAA,CAAAC,cAAA,eAAyB;IACrBD,EAAA,CAAAE,MAAA,+BACA;IAAAF,EAAA,CAAAC,cAAA,cAAQ;IACiGD,EAAA,CAAAE,MAAA,kBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;IAZnHH,EAAA,CAAAK,SAAA,GAAkC;IAAlCL,EAAA,CAAAM,iBAAA,CAAAC,WAAA,CAAAC,qBAAA,CAAkC;IACQR,EAAA,CAAAK,SAAA,GAAiC;IAAjCL,EAAA,CAAAS,kBAAA,UAAAF,WAAA,CAAAG,eAAA,KAAiC;IAE9EV,EAAA,CAAAK,SAAA,GAAmB;IAAnBL,EAAA,CAAAM,iBAAA,CAAAC,WAAA,CAAAI,MAAA,CAAmB;IAGAX,EAAA,CAAAK,SAAA,GAA6B;IAA7BL,EAAA,CAAAM,iBAAA,CAAAC,WAAA,CAAAK,gBAAA,CAA6B;IACjDZ,EAAA,CAAAK,SAAA,GAAwC;IAAxCL,EAAA,CAAAa,UAAA,wBAAAN,WAAA,CAAAO,SAAA,EAAAd,EAAA,CAAAe,aAAA,CAAwC;;;ADhB/D,OAAM,MAAOC,6BAA6B;EAUxCC,YAAqBC,OAAqC;IAArC,KAAAA,OAAO,GAAPA,OAAO;IAH5B,KAAAC,aAAa,GAAwB,EAAE;EAKvC;EAEAC,QAAQA,CAAA;IACJ,IAAI,CAACC,0BAA0B,CAAC,IAAI,CAACC,MAAM,CAAC;EAChD;EAEMD,0BAA0BA,CAACC,MAAc;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC7C,IAAGD,KAAI,CAACE,SAAS,KAAK,EAAE,IAAIH,MAAM,EAAE,C;MAGpCC,KAAI,CAACJ,aAAa,SAASI,KAAI,CAACL,OAAO,CAACQ,+BAA+B,CAACJ,MAAM,CAAC;MAC/EK,OAAO,CAACC,GAAG,CAACL,KAAI,CAACJ,aAAa,CAAC;IAAC;EAClC;;AAxBWH,6BAA6B,C;mBAA7BA,6BAA6B,EAAAhB,EAAA,CAAA6B,iBAAA,CAAAC,EAAA,CAAAC,4BAAA;AAAA;AAA7Bf,6BAA6B,C;QAA7BA,6BAA6B;EAAAgB,SAAA;EAAAC,MAAA;IAAAX,MAAA;IAAAG,SAAA;EAAA;EAAAS,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR1CvC,EAAA,CAAAC,cAAA,aAAuB;MAMoBD,EAAA,CAAAE,MAAA,WAAI;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAMhDH,EAAA,CAAAC,cAAA,aAAiB;MAEbD,EAAA,CAAAyC,UAAA,IAAAC,4CAAA,kBAmBM;MACV1C,EAAA,CAAAG,YAAA,EAAM;;;MApByCH,EAAA,CAAAK,SAAA,GAAgB;MAAhBL,EAAA,CAAAa,UAAA,YAAA2B,GAAA,CAAArB,aAAA,CAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"D:/simplifica gpt/Gripster/Frontend/angular-gripster/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProcessoService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:8080/api/v1/app/';\n  }\n  getGeneralInformation(idProcesso) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const urlEndpoint = _this.url + 'get-informacoes-gerais-processo' + '/' + idProcesso;\n      let generalInformation = _this.http.get(urlEndpoint).toPromise();\n      return generalInformation;\n    })();\n  }\n  getTextoCompleto(processo_id) {\n    const urlEndpoint = this.url + 'get-texto-completo' + '/' + processo_id;\n    let texto = this.http.get(urlEndpoint).toPromise();\n    return texto;\n  }\n  getSimplificacao(processo_id) {\n    const urlEndpoint = this.url + 'get-simplificacao-decisao' + '/' + processo_id;\n    let generalInformation = this.http.get(urlEndpoint).toPromise();\n    return generalInformation;\n  }\n}\nProcessoService.ɵfac = function ProcessoService_Factory(t) {\n  return new (t || ProcessoService)(i0.ɵɵinject(i1.HttpClient));\n};\nProcessoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProcessoService,\n  factory: ProcessoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ProcessoService","constructor","http","url","getGeneralInformation","idProcesso","_this","_asyncToGenerator","urlEndpoint","generalInformation","get","toPromise","getTextoCompleto","processo_id","texto","getSimplificacao","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\simplifica gpt\\Gripster\\Frontend\\angular-gripster\\src\\app\\processo\\processo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport GeneralInformation from '../shared/model/quadro-geral-processo-model';\nimport { HttpClient } from '@angular/common/http';\nimport TextoCompleto from '../shared/model/texto-completo-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessoService {\n  \n\n \n\n  url = 'http://localhost:8080/api/v1/app/';\n  constructor(private http: HttpClient) { }\n\n  async getGeneralInformation(idProcesso: String): Promise<GeneralInformation>{\n    const urlEndpoint = this.url +'get-informacoes-gerais-processo' + '/' + idProcesso;\n    let generalInformation = this.http.get<GeneralInformation>(urlEndpoint).toPromise()\n    return generalInformation;\n  }\n\n  getTextoCompleto(processo_id: any): Promise<TextoCompleto> {\n    const urlEndpoint = this.url +'get-texto-completo' + '/' + processo_id;\n    let texto = this.http.get<TextoCompleto>(urlEndpoint).toPromise()\n    return texto;\n  }\n  getSimplificacao(processo_id: String): import(\"../shared/model/simplificacao-model\").default | PromiseLike<import(\"../shared/model/simplificacao-model\").default> {\n    const urlEndpoint = this.url +'get-simplificacao-decisao' + '/' + processo_id;\n    let generalInformation = this.http.get<GeneralInformation>(urlEndpoint).toPromise()\n    return generalInformation;\n  }\n\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,eAAe;EAM1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,GAAG,GAAG,mCAAmC;EACD;EAElCC,qBAAqBA,CAACC,UAAkB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC5C,MAAMC,WAAW,GAAGF,KAAI,CAACH,GAAG,GAAE,iCAAiC,GAAG,GAAG,GAAGE,UAAU;MAClF,IAAII,kBAAkB,GAAGH,KAAI,CAACJ,IAAI,CAACQ,GAAG,CAAqBF,WAAW,CAAC,CAACG,SAAS,EAAE;MACnF,OAAOF,kBAAkB;IAAC;EAC5B;EAEAG,gBAAgBA,CAACC,WAAgB;IAC/B,MAAML,WAAW,GAAG,IAAI,CAACL,GAAG,GAAE,oBAAoB,GAAG,GAAG,GAAGU,WAAW;IACtE,IAAIC,KAAK,GAAG,IAAI,CAACZ,IAAI,CAACQ,GAAG,CAAgBF,WAAW,CAAC,CAACG,SAAS,EAAE;IACjE,OAAOG,KAAK;EACd;EACAC,gBAAgBA,CAACF,WAAmB;IAClC,MAAML,WAAW,GAAG,IAAI,CAACL,GAAG,GAAE,2BAA2B,GAAG,GAAG,GAAGU,WAAW;IAC7E,IAAIJ,kBAAkB,GAAG,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAqBF,WAAW,CAAC,CAACG,SAAS,EAAE;IACnF,OAAOF,kBAAkB;EAC3B;;AAvBWT,eAAe,C;mBAAfA,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfnB,eAAe,C;SAAfA,eAAe;EAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}